version: "3.8"

services:
  db:
    image: postgres:15
    container_name: sonar_db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonarqube
    volumes:
      - sonar_db_data:/var/lib/postgresql/data
    networks:
      - sonar-net

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
      # Somente para DEV: (pode ser necessário em Windows/WSL/limitações)
      # SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
    ports:
      - "9000:9000"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - sonar-net

  scanner:
    image: sonarsource/sonar-scanner-cli:latest
    container_name: sonar_scanner
    entrypoint: ["/bin/sh", "-c"] 
    # Não rodamos automaticamente; usaremos `docker compose run --rm scanner ...`
    volumes:
      - ./:/usr/src
    depends_on:
      - sonarqube
    networks:
      - sonar-net

volumes:
  sonar_db_data:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:

networks:
  sonar-net:
    driver: bridge
