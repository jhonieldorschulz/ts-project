@startuml
package "Products" {
  interface Button {
    +render(): string
    +onClick(): void
  }
  interface Checkbox {
    +render(): string
    +toggle(): boolean
  }

  class LightButton
  class DarkButton
  class LightCheckbox
  class DarkCheckbox

  Button <|.. LightButton
  Button <|.. DarkButton
  Checkbox <|.. LightCheckbox
  Checkbox <|.. DarkCheckbox
}

package "Factory" {
  interface GUIFactory {
    +createButton(): Button
    +createCheckbox(): Checkbox
  }

  class LightFactory
  class DarkFactory

  GUIFactory <|.. LightFactory
  GUIFactory <|.. DarkFactory
  LightFactory --> LightButton
  LightFactory --> LightCheckbox
  DarkFactory --> DarkButton
  DarkFactory --> DarkCheckbox
}

package "Client" {
  class Application {
    -factory: GUIFactory
    +constructor(factory: GUIFactory)
    +renderUI(): string
  }
  Application --> GUIFactory
  Application --> Button
  Application --> Checkbox
}

@enduml